// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wireinject

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"layout/internal/handler"
	"layout/internal/handler/app"
	"layout/internal/handler/h5"
	"layout/internal/repository"
	"layout/internal/router"
	"layout/internal/service"
)

import (
	_ "layout/pkg/pprof"
)

// Injectors from wire.go:

func NewApp() (*gin.Engine, func(), error) {
	handlerHandler := handler.NewHandler()
	serviceService := service.NewService()
	db := repository.NewDB()
	repositoryRepository := repository.NewRepository(db)
	userRepository := repository.NewUserRepository(repositoryRepository)
	userService := service.NewUserService(serviceService, userRepository)
	userHandler := app.NewUserHandler(handlerHandler, userService)
	appRouter := &app.Router{
		AppUser: userHandler,
	}
	h5Router := &h5.Router{}
	engine := router.NewServerHTTP(appRouter, h5Router)
	return engine, func() {
	}, nil
}

// wire.go:

var HandlerSet = wire.NewSet(handler.ProviderSet, app.ProviderSet, app.StructProvider, h5.ProviderSet, h5.StructProvider)
